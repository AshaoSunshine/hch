# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-09-29 06:31
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DeletePaperTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pap_subject', models.CharField(max_length=30, verbose_name='论文题目')),
                ('pap_paper', models.CharField(max_length=30, verbose_name='论文期刊')),
                ('pap_model', models.CharField(max_length=20, verbose_name='论文类型')),
                ('pap_publish_date', models.DateField(verbose_name='发表日期')),
                ('pap_author', models.CharField(max_length=10, verbose_name='论文作者')),
                ('pap_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '删除论文',
                'verbose_name_plural': '删除论文',
                'db_table': 'df_delete_paper',
            },
        ),
        migrations.CreateModel(
            name='DeletePatentTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pat_name', models.CharField(max_length=20, verbose_name='专利名称')),
                ('pat_model', models.CharField(choices=[(0, '实用新型'), (1, '发明专利'), (2, '外观专利')], max_length=20, verbose_name='专利类型')),
                ('pat_apply_date', models.DateField(verbose_name='专利申请日期')),
                ('pat_author', models.CharField(max_length=10, verbose_name='作者')),
                ('pat_grant_auth_num', models.IntegerField(verbose_name='授权号')),
                ('pat_grant_auth_date', models.DateField(verbose_name='授权公告日期')),
                ('pat_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '删除专利',
                'verbose_name_plural': '删除专利',
                'db_table': 'df_delete_patent',
            },
        ),
        migrations.CreateModel(
            name='DeleteSoftworkTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sw_name', models.CharField(max_length=30, verbose_name='软著名称')),
                ('sw_model', models.CharField(choices=[(1, '独立开发'), (2, '委托开发')], max_length=20, verbose_name='软著类型')),
                ('sw_reg_date', models.DateField(verbose_name='登记日期')),
                ('sw_author', models.CharField(max_length=10, verbose_name='著作权人')),
                ('sw_reg_num', models.IntegerField(verbose_name='登记号')),
                ('sw_state', models.CharField(choices=[(0, '登记'), (1, '申请')], max_length=10, verbose_name='软著状态')),
                ('sw_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '删除软著',
                'verbose_name_plural': '删除软著',
                'db_table': 'df_delete_softwork',
            },
        ),
        migrations.CreateModel(
            name='IntellPropRecordTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('softwork', models.CharField(max_length=30, verbose_name='软著')),
                ('paper', models.CharField(max_length=30, verbose_name='论文')),
                ('patent', models.CharField(max_length=30, verbose_name='专利')),
            ],
            options={
                'verbose_name': '知识产权记录',
                'verbose_name_plural': '知识产权记录',
                'db_table': 'df_intell_prop_record',
            },
        ),
        migrations.CreateModel(
            name='NewPaperTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pap_subject', models.CharField(max_length=30, verbose_name='论文题目')),
                ('pap_paper', models.CharField(max_length=30, verbose_name='论文期刊')),
                ('pap_model', models.CharField(max_length=20, verbose_name='论文类型')),
                ('pap_publish_date', models.DateField(verbose_name='发表日期')),
                ('pap_author', models.CharField(max_length=10, verbose_name='论文作者')),
                ('pap_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '新增论文',
                'verbose_name_plural': '新增论文',
                'db_table': 'df_new_paper',
            },
        ),
        migrations.CreateModel(
            name='NewPatentTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pat_name', models.CharField(max_length=20, verbose_name='专利名称')),
                ('pat_model', models.CharField(choices=[(0, '实用新型'), (1, '发明专利'), (2, '外观专利')], max_length=20, verbose_name='专利类型')),
                ('pat_apply_date', models.DateField(verbose_name='专利申请日期')),
                ('pat_author', models.CharField(max_length=10, verbose_name='作者')),
                ('pat_grant_auth_num', models.IntegerField(verbose_name='授权号')),
                ('pat_grant_auth_date', models.DateField(verbose_name='授权公告日期')),
                ('pat_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '新增专利',
                'verbose_name_plural': '新增专利',
                'db_table': 'df_new_patent',
            },
        ),
        migrations.CreateModel(
            name='NewSoftworkTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sw_name', models.CharField(max_length=30, verbose_name='软著名称')),
                ('sw_model', models.CharField(choices=[(0, '独立开发'), (1, '委托开发')], max_length=20, verbose_name='软著类型')),
                ('sw_reg_date', models.DateField(verbose_name='登记日期')),
                ('sw_author', models.CharField(max_length=10, verbose_name='著作权人')),
                ('sw_reg_num', models.IntegerField(verbose_name='登记号')),
                ('sw_state', models.CharField(choices=[(0, '登记'), (1, '申请')], max_length=10, verbose_name='软著状态')),
                ('sw_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '新增软著',
                'verbose_name_plural': '新增软著',
                'db_table': 'df_new_softwork',
            },
        ),
        migrations.CreateModel(
            name='PaperTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pap_subject', models.CharField(max_length=30, verbose_name='论文题目')),
                ('pap_paper', models.CharField(max_length=30, verbose_name='论文期刊')),
                ('pap_model', models.CharField(choices=[(0, 'SCI'), (1, 'EI'), (2, '核心'), (3, '普通')], max_length=20, verbose_name='论文类型')),
                ('pap_publish_date', models.DateField(verbose_name='发表日期')),
                ('pap_author', models.CharField(max_length=10, verbose_name='论文作者')),
                ('uploade_people', models.CharField(max_length=10, verbose_name='上传人')),
                ('pap_state', models.CharField(choices=[(0, '已录用'), (1, '已发表')], max_length=10, verbose_name='状态')),
            ],
            options={
                'verbose_name': '论文',
                'verbose_name_plural': '论文',
                'db_table': 'df_paper',
            },
        ),
        migrations.CreateModel(
            name='PatentTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pat_name', models.CharField(max_length=20, verbose_name='专利名称')),
                ('pat_model', models.CharField(max_length=20, verbose_name='专利类型')),
                ('pat_num', models.IntegerField(verbose_name='专利号')),
                ('pat_apply_date', models.DateField(verbose_name='专利申请日期')),
                ('pat_author', models.CharField(max_length=10, verbose_name='作者')),
                ('pat_grant_auth_date', models.DateField(verbose_name='授权公告日期')),
                ('pat_grant_auth_num', models.IntegerField(verbose_name='授权号')),
                ('uploade_people', models.CharField(max_length=10, verbose_name='上传人')),
            ],
            options={
                'verbose_name': '专利',
                'verbose_name_plural': '专利',
                'db_table': 'df_patent',
            },
        ),
        migrations.CreateModel(
            name='SoftworkTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sw_name', models.CharField(max_length=30, verbose_name='软著名称')),
                ('sw_model', models.CharField(choices=[(0, '独立开发'), (1, '委托开发')], max_length=20, verbose_name='软著类型')),
                ('sw_reg_num', models.IntegerField(verbose_name='登记号')),
                ('sw_reg_date', models.DateField(verbose_name='登记日期')),
                ('sw_state', models.CharField(choices=[(0, '登记'), (1, '申请')], max_length=10, verbose_name='软著状态')),
                ('sw_author', models.CharField(max_length=10, verbose_name='著作权人')),
                ('uploade_people', models.CharField(max_length=10, verbose_name='上传人')),
            ],
            options={
                'verbose_name': '软著',
                'verbose_name_plural': '软著',
                'db_table': 'df_softwork',
            },
        ),
        migrations.CreateModel(
            name='ViewPaperTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pap_subject', models.CharField(max_length=30, verbose_name='论文题目')),
                ('pap_paper', models.CharField(max_length=30, verbose_name='论文期刊')),
                ('pap_model', models.CharField(max_length=20, verbose_name='论文类型')),
                ('pap_publish_date', models.DateField(verbose_name='发表日期')),
                ('pap_author', models.CharField(max_length=10, verbose_name='论文作者')),
                ('pap_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '查看论文',
                'verbose_name_plural': '查看论文',
                'db_table': 'df_view_paper',
            },
        ),
        migrations.CreateModel(
            name='ViewPatentTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pat_name', models.CharField(max_length=20, verbose_name='专利名称')),
                ('pat_model', models.CharField(choices=[(0, '实用新型'), (1, '发明专利'), (2, '外观专利')], max_length=20, verbose_name='专利类型')),
                ('pat_apply_date', models.DateField(verbose_name='专利申请日期')),
                ('pat_author', models.CharField(max_length=10, verbose_name='作者')),
                ('pat_grant_auth_num', models.IntegerField(verbose_name='授权号')),
                ('pat_grant_auth_date', models.DateField(verbose_name='授权公告日期')),
                ('pat_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '查看专利',
                'verbose_name_plural': '查看专利',
                'db_table': 'df_view_patent',
            },
        ),
        migrations.CreateModel(
            name='ViewSoftworkTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sw_name', models.CharField(max_length=30, verbose_name='软著名称')),
                ('sw_model', models.CharField(choices=[(0, '独立开发'), (1, '委托开发')], max_length=20, verbose_name='软著类型')),
                ('sw_reg_date', models.DateField(verbose_name='登记日期')),
                ('sw_author', models.CharField(max_length=10, verbose_name='著作权人')),
                ('sw_reg_num', models.IntegerField(verbose_name='登记号')),
                ('sw_state', models.CharField(choices=[(0, '登记'), (1, '申请')], max_length=10, verbose_name='软著状态')),
                ('sw_enclosure', models.FileField(choices=[(0, '选择'), (1, '上传'), (2, '删除')], upload_to='', verbose_name='附件')),
            ],
            options={
                'verbose_name': '查看软著',
                'verbose_name_plural': '查看软著',
                'db_table': 'df_view_softwork',
            },
        ),
    ]
